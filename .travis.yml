os: windows
language: shell
name: "Python 3.8.0 on Windows"
before_install:
  - choco install python --version 3.8.0
  - python -m pip install --upgrade pip

env: PATH=/c/Python38:/c/Python38/Scripts:$PATH

addons:
  apt:
    packages:
      - python3-pyqt5
      
virtualenv:
  system_site_packages: true

install:
  - pip3 install --upgrade pip
  - pip install libyaz0
  - pip install sarclib
  - pip install pyqt5
  - pip install sip
  - pip install cx_freeze
  - pip install --user sip
  - pip install -U --user PyQt5 PyQt5_sip
  - pip install --upgrade --force-reinstall pyqt5;
  
on: [push]

jobs:
  build:

    strategy:
      matrix:
        python-version: [3.8]
        platform: [macos-latest, windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.platform }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install wheel
        pip install PyQt5 PyInstaller libyaz0 sarclib cx_freeze
    - name: Build 
      run: |
        python -OO build.py
    - name: Tar (Linux/Mac)
      run: |
        cd distrib
        tar -czvf ../build-${{ matrix.platform }}.tar.gz ./*
        cd ..
      if: ${{ matrix.platform == 'macos-latest' || matrix.platform == 'ubuntu-latest' }}
    - name: Upload artifacts (Linux/Mac)
      uses: actions/upload-artifact@v2
      with:
        name: build-${{ matrix.platform }}
        path: build-${{ matrix.platform }}.tar.gz
      if: ${{ matrix.platform == 'macos-latest' || matrix.platform == 'ubuntu-latest' }}
    - name: Upload artifacts (Win)
      uses: actions/upload-artifact@v2
      with:
        name: build-${{ matrix.platform }}
        path: distrib/*
      if: ${{ matrix.platform == 'windows-latest' }}
